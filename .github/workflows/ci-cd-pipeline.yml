name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'  # Replace with your target .NET version

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x'  # Replace with your target .NET version

    - name: Run tests
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Code Quality Analysis
      run: dotnet tool install --global dotnet-sonarscanner
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        NUGET_XMLDOC_MODE: skip
    - name: Analyze code with SonarQube
      run: dotnet sonarscanner begin /k:"your_project_key" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    - name: End analysis
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Staging Environment
      run: |
        # Replace this with your deployment script
        echo "Deploying application to staging environment..."

    - name: Send notification on failure
      if: failure()
      uses: roccivic/action-send-slack-message@v1
      with:
        webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        msg: "Deployment to staging environment failed! Please check the logs."

  notify:
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Notify team on failure
      uses: roccivic/action-send-slack-message@v1
      with:
        webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        msg: "Build or Deployment failed! Please check the logs."
